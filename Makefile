##########################################################################
##  v      #                  The Coq Proof Assistant                   ##
## <O___,, # CNRS-Ecole Polytechnique-INRIA Futurs-Universite Paris Sud ##
##   \VV/  #                                                            ##
##    //   #   Makefile automagically generated by coq_makefile V8.2    ##
##########################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -o Makefile -f Make 
#

##########################
#                        #
# Variables definitions. #
#                        #
##########################

CAMLP4LIB:=$(shell camlp5 -where 2> /dev/null || camlp4 -where)
CAMLP4:=$(notdir $(CAMLP4LIB))
COQSRC:=-I $(COQTOP)/kernel -I $(COQTOP)/lib \
  -I $(COQTOP)/library -I $(COQTOP)/parsing \
  -I $(COQTOP)/pretyping -I $(COQTOP)/interp \
  -I $(COQTOP)/proofs -I $(COQTOP)/syntax -I $(COQTOP)/tactics \
  -I $(COQTOP)/toplevel -I $(COQTOP)/contrib/correctness \
  -I $(COQTOP)/contrib/extraction -I $(COQTOP)/contrib/field \
  -I $(COQTOP)/contrib/fourier -I $(COQTOP)/contrib/graphs \
  -I $(COQTOP)/contrib/interface -I $(COQTOP)/contrib/jprover \
  -I $(COQTOP)/contrib/omega -I $(COQTOP)/contrib/romega \
  -I $(COQTOP)/contrib/ring -I $(COQTOP)/contrib/xml \
  -I $(CAMLP4LIB)
ZFLAGS:=$(OCAMLLIBS) $(COQSRC)
OPT:=
COQFLAGS:=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
COQC:=$(COQBIN)coqc
GALLINA:=$(COQBIN)gallina
COQDOC:=$(COQBIN)coqdoc
CAMLC:=ocamlc -rectypes -c
CAMLOPTC:=ocamlopt -c
CAMLLINK:=ocamlc
CAMLOPTLINK:=ocamlopt
COQDEP:=$(COQBIN)coqdep -c
GRAMMARS:=grammar.cma
CAMLP4EXTEND:=pa_extend.cmo pa_macro.cmo q_MLast.cmo
PP:=-pp "$(CAMLP4)o -I . -I $(COQTOP)/parsing $(CAMLP4EXTEND) $(GRAMMARS) -impl"

#########################
#                       #
# Libraries definition. #
#                       #
#########################

OCAMLLIBS:=-I .
COQLIBS:=-I .
COQDOCLIBS:=

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES:=while.v\
  two_power.v\
  trivial.v\
  strategies.v\
  standard.v\
  spec.v\
  shift.v\
  monoid.v\
  monofun.v\
  matrix.v\
  main.v\
  machine.v\
  log2_spec.v\
  log2_implementation.v\
  imperative.v\
  generation.v\
  fmpc.v\
  euclid.v\
  dicho_strat.v\
  develop.v\
  binary_strat.v\
  Wf_compl.v\
  Mult_compl.v\
  Le_lt_compl.v\
  Constants.v\
  extract.v\
  extract_hs.v\
  extract_scm.v
VOFILES:=$(VFILES:.v=.vo)
GLOBFILES:=$(VFILES:.v=.glob)
VIFILES:=$(VFILES:.v=.vi)
GFILES:=$(VFILES:.v=.g)
HTMLFILES:=$(VFILES:.v=.html)
GHTMLFILES:=$(VFILES:.v=.g.html)

all: while.vo\
  two_power.vo\
  trivial.vo\
  strategies.vo\
  standard.vo\
  spec.vo\
  shift.vo\
  monoid.vo\
  monofun.vo\
  matrix.vo\
  main.vo\
  machine.vo\
  log2_spec.vo\
  log2_implementation.vo\
  imperative.vo\
  generation.vo\
  fmpc.vo\
  euclid.vo\
  dicho_strat.vo\
  develop.vo\
  binary_strat.vo\
  Wf_compl.vo\
  Mult_compl.vo\
  Le_lt_compl.vo\
  Constants.vo\
  extract.vo\
  extract_hs.vo\
  extract_scm.vo\
  fib\
  test

spec: $(VIFILES)

gallina: $(GFILES)

html: $(GLOBFILES) $(VFILES)
	- mkdir html
	$(COQDOC) -toc -html $(COQDOCLIBS) -d html $(VFILES)

gallinahtml: $(GLOBFILES) $(VFILES)
	- mkdir html
	$(COQDOC) -toc -html -g $(COQDOCLIBS) -d html $(VFILES)

all.ps: $(VFILES)
	$(COQDOC) -toc -ps $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -toc -ps -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`



###################
#                 #
# Custom targets. #
#                 #
###################

fib: extract.vo
	ocamlopt -o fib nums.cmxa fibo.mli fibo.ml main.ml

test: fib
	@echo '***** test: checking Fibonacci(2000) *****'
	rm -f .fib_2000
	./fib 2000 > .fib_2000	
	cat .fib_2000
	cmp .fib_2000 fib_2000
	@echo '************** End of test ****************'

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend html

.SUFFIXES: .v .vo .vi .g .html .tex .g.tex .g.html

%.vo %.glob: %.v
	$(COQC) $(COQLIBS) -dump-glob $*.glob $(COQDEBUG) $(COQFLAGS) $*

%.vi: %.v
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

%.g: %.v
	$(GALLINA) $<

%.tex: %.v
	$(COQDOC) -latex $< -o $@

%.html: %.v %.glob
	$(COQDOC) -glob-from $*.glob  -html $< -o $@

%.g.tex: %.v
	$(COQDOC) -latex -g $< -o $@

%.g.html: %.v %.glob
	$(COQDOC) -glob-from $*.glob -html -g $< -o $@

%.v.d.raw: %.v
	$(COQDEP) -slash $(COQLIBS) "$<" > "$@"\
	  || ( RV=$$?; rm -f "$@"; exit $${RV} )

%.v.d: %.v.d.raw
	$(HIDE)sed 's/\(.*\)\.vo[[:space:]]*:/\1.vo \1.glob:/' < "$<" > "$@" \
	  || ( RV=$$?; rm -f "$@"; exit $${RV} )

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

install:
	mkdir -p `$(COQC) -where`/user-contrib
	cp -f $(VOFILES) `$(COQC) -where`/user-contrib

Makefile: Make
	mv -f Makefile Makefile.bak
	$(COQBIN)coq_makefile -f Make -o Makefile


clean:
	rm -f *.cmo *.cmi *.cmx *.o $(VOFILES) $(VIFILES) $(GFILES) *~
	rm -f all.ps all-gal.ps all.glob $(VFILES:.v=.glob) $(HTMLFILES) $(GHTMLFILES) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) $(VFILES:.v=.v.d)
	- rm -rf html
	- rm -f fib
	- rm -f test

archclean:
	rm -f *.cmx *.o


include $(VFILES:.v=.v.d)
.SECONDARY: $(VFILES:.v=.v.d)

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

